// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cmpitcpp
Rcpp::IntegerVector cmpitcpp(Rcpp::IntegerVector arr);
RcppExport SEXP _transgeneR_cmpitcpp(SEXP arrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type arr(arrSEXP);
    rcpp_result_gen = Rcpp::wrap(cmpitcpp(arr));
    return rcpp_result_gen;
END_RCPP
}
// clustercpp
Rcpp::List clustercpp(Rcpp::IntegerVector arr);
RcppExport SEXP _transgeneR_clustercpp(SEXP arrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type arr(arrSEXP);
    rcpp_result_gen = Rcpp::wrap(clustercpp(arr));
    return rcpp_result_gen;
END_RCPP
}
// findhomo
void findhomo(Rcpp::String dir, Rcpp::IntegerVector para);
RcppExport SEXP _transgeneR_findhomo(SEXP dirSEXP, SEXP paraSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type dir(dirSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type para(paraSEXP);
    findhomo(dir, para);
    return R_NilValue;
END_RCPP
}
// assignreads
void assignreads(Rcpp::StringVector ipt, Rcpp::IntegerVector para);
RcppExport SEXP _transgeneR_assignreads(SEXP iptSEXP, SEXP paraSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type ipt(iptSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type para(paraSEXP);
    assignreads(ipt, para);
    return R_NilValue;
END_RCPP
}
// reassignreads
void reassignreads(Rcpp::String dir, Rcpp::IntegerVector dist);
RcppExport SEXP _transgeneR_reassignreads(SEXP dirSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type dir(dirSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type dist(distSEXP);
    reassignreads(dir, dist);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_transgeneR_cmpitcpp", (DL_FUNC) &_transgeneR_cmpitcpp, 1},
    {"_transgeneR_clustercpp", (DL_FUNC) &_transgeneR_clustercpp, 1},
    {"_transgeneR_findhomo", (DL_FUNC) &_transgeneR_findhomo, 2},
    {"_transgeneR_assignreads", (DL_FUNC) &_transgeneR_assignreads, 2},
    {"_transgeneR_reassignreads", (DL_FUNC) &_transgeneR_reassignreads, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_transgeneR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
